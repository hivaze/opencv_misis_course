## Работа 4. Использование бинаризации для анализа изображений (выделение символов) 
автор: Бртатчиков С.С.
url: https://gitlab.com/Goruarty/gorunov_a_g/prj.labs/lab04/

### Задание
1. Самостоятельно изготовить эталонный вариант бинаризованного изображения.
2. Цветоредуцировать исходное цветное изображение до изображения в градациях серого $G_1$.
3. Бинаризовать изображение $G_1$ и получить бинаризованное изображение $B_1$.
4. Применить фильтрацию для улучшения качества бинаризованного изображения $F_1$.
5. Выделить компоненты связности.
6. Произвести фильтрацию компонент связности (классификация на "шумовые" и "объекты", $V_1$).
7. Оценить числовые характеристики качества бинаризации на разных этапах и визуализировать отклонение $E_2$ результата анализа от эталона. 
8. Реализовать и настроить локальную бинаризацию по статье "Быстрый алгоритм локальной бинаризации с гауссовым окном" (https://mipt.ru/upload/e35/09-FIVT-arpg5tlxag0.pdf).
9. Сделать пп.3-7 для метода из п.8 (с теми же настройками, получить $B_2$, $F_2$, $V_2$, $E_2$ и численные оценки).

### Результаты

![](lab04.src.jpg)
Рис. 1. Исходное тестовое изображение

![](lab04.g1.png)
Рис. 2. Визуализация результата $G_1$ цветоредукции

![](lab04.b1.png)
Рис. 3. Визуализация результата бинаризаии $B_1$

	Метод adaptiveThreshold():
	*maxValue = 255;
	*adaptiveMethod = ADAPTIVE_THRESH_MEAN_C;
	*thresholdType = THRESH_BINARY;
	*blockSize = 9;
	*C = 9.

	Оценки качества:
	* Accuracy = 0.97;
	* Precision = 1;
	* Recall = 0.97.

![](lab04.f1.png)
Рис. 4. Визуализация результата $F_1$ фильтрации бинаризованного изображения $B_1$

	Метод medianBlur():
	*ksize = 3.

	Оценки качества:
	* Accuracy = 0.98;
	* Precision = 1;
	* Recall = 0.98.

![](lab04.v1.png)
Рис. 5. Визуализация результатов фильтрации компонент связности $V_1$
	
	Метод connectedComponentsWithStats()
	Оценки качества:
	* Accuracy = 0.999;
	* Precision = 1;
	* Recall = 0.999.


![](lab04.e1.png)
Рис. 6. Визуализация отклонений от эталона $E_1$

![](lab04.b2.png)
Рис. 7. Визуализация результата бинаризаии $B_2$ (метод с гауссовым окном)

	Метод getGaussianKernel()
	*ksize = 19;
	*sigma = -1;
	*depth = CV_32F;
	*thres = 0.02.

	Оценки качества:
	* Accuracy = 0.95;
	* Precision = 1;
	* Recall = 0.95.

![](lab04.f2.png)
Рис. 8. Визуализация результата $F_2$ фильтрации бинаризованного изображения $B_2$
	
	Метод medianBlur():
	*ksize = 3.

	Оценки качества:
	* Accuracy = 0.95;
	* Precision = 1;
	* Recall = 0.95.

![](lab04.v2.png)
Рис. 9. Визуализация результатов фильтрации компонент связности $V_2$ (метод с гауссовым окном)

	Метод connectedComponentsWithStats()
	Оценки качества:
	* Accuracy = 0.996;
	* Precision = 1;
	* Recall = 0.997.

![](lab04.e2.png)
Рис. 10. Визуализация отклонений от эталона $E_2$ (метод с гауссовым окном)

### Текст программы

```cpp
@cpp_source@
```
